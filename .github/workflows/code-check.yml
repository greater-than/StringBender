# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Code Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.7

      - name: Setup Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5.1.1
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ~/.venv
          installer-parallel: true

      - name: Load Cached Virtual Environment
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry lock --no-update
          poetry install --no-interaction --no-root

      - name: Lint with flake8
        run: |
          source .venv/bin/activate
          # stop the build if there are Python syntax errors or undefined names
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --inline-quotes=double

      - name: Run Unit Tests with pytest
        run: |
          source .venv/bin/activate
          pytest
